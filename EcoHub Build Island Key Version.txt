-- Carga la librería de UI (Rayfield en este caso)
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

-- Crear la ventana de UI con sistema de key habilitado
local Window = Rayfield:CreateWindow({
    Name = "Eco Hub",
    LoadingTitle = "Cargando...",
    LoadingSubtitle = "Por favor espera",
    ConfigurationSaving = {
        Enabled = false,
        FolderName = nil,
        FileName = "EcoHubConfig"
    },
    Discord = {
        Enabled = false,
        Invite = "",
        RememberJoins = true
    },
    KeySystem = true, -- Activado el sistema de key
    KeySettings = {
        Title = "Ingrese la clave",
        Subtitle = "Clave necesaria para acceder",
        Note = "Ingrese la clave que se le proporcionó",
        SaveKey = true,
        Key = "ecohub" -- Clave establecida en "ecohub"
    }
})

-- Crear pestañas
local MainTab = Window:CreateTab("Main", 4483362458)
local AvatarTab = Window:CreateTab("Avatar", 7072706623) -- Pestaña "Avatar"
local TeleportsTab = Window:CreateTab("Teleports 📋", 1234567890) -- Nueva pestaña "Teleports 📋" (usa el id de icono que prefieras)

-- Crear secciones
local MainSection = MainTab:CreateSection("Interactable")
local AvatarSection = AvatarTab:CreateSection("Character Settings")

-- Botón para recoger herramientas
MainTab:CreateButton({
    Name = "Get All Tools",
    Callback = function()
        loadstring([[ 
            local player = game.Players.LocalPlayer
            local character = player.Character or player.CharacterAdded:Wait()
            local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
            local backpack = player:FindFirstChild("Backpack")
            
            if not humanoidRootPart or not backpack then
                warn("Error: No se encontró el HumanoidRootPart o el Backpack.")
                return
            end
            
            local posOriginal = humanoidRootPart.CFrame
            local itemsRecolectados = 0
            
            local function recogerItems()
                for _, objeto in pairs(game.Workspace:GetDescendants()) do
                    if objeto.Name == "SwordGiver" or objeto.Name == "GearGiver" or objeto.Name == "Giver" then
                        if objeto.Parent:FindFirstChildOfClass("Part") then
                            humanoidRootPart.CFrame = objeto.Parent:FindFirstChildOfClass("Part").CFrame + Vector3.new(0,1,0)
                            wait(0.1)
                            itemsRecolectados = itemsRecolectados + 1
                        end
                    end
                end
            end
            
            recogerItems()
            
            humanoidRootPart.CFrame = posOriginal
            print("Proceso completado. Ítems recogidos: " .. itemsRecolectados)
        ]])()
    end
})

-- Botón para Purple Hollow (Progears Imported)
MainTab:CreateButton({
    Name = "Purple Hollow (Progears Imported)",
    Callback = function()
        local args = {
            [1] = 16,
            [2] = 50
        }
        game:GetService("ReplicatedStorage").Purple:FireServer(unpack(args))
    end
})

-- Botón para Drop Cash X100
MainTab:CreateButton({
    Name = "Drop Cash X100 (Wallet in hand)",
    Callback = function()
        for i = 1, 100 do
            local args = {
                [1] = 1
            }
            game:GetService("ReplicatedStorage").WalletRemotes.DropCash:FireServer(unpack(args))
            wait(0.1)
        end
    end
})

-- Botón para equipar todas las herramientas
MainTab:CreateButton({
    Name = "Equip All Tools",
    Callback = function()
        local player = game.Players.LocalPlayer
        local backpack = player:FindFirstChild("Backpack")
        local character = player.Character or player.CharacterAdded:Wait()

        if not backpack or not character then
            warn("Error: No se encontró el Backpack o el Character.")
            return
        end

        for _, tool in pairs(backpack:GetChildren()) do
            if tool:IsA("Tool") then
                tool.Parent = character
            end
        end

        print("Todas las herramientas han sido equipadas.")
    end
})

-- TextBox para ingresar WalkSpeed
local WalkSpeedValue = 16 -- Valor por defecto

AvatarTab:CreateInput({
    Name = "Set WalkSpeed",
    PlaceholderText = "Introduce la velocidad",
    RemoveTextAfterFocusLost = false,
    Callback = function(value)
        local speed = tonumber(value)
        if speed and speed > 0 then
            WalkSpeedValue = speed
        else
            warn("Valor no válido. Introduce un número mayor a 0.")
        end
    end
})

-- Botón para aplicar WalkSpeed
AvatarTab:CreateButton({
    Name = "Apply WalkSpeed",
    Callback = function()
        local player = game.Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        local humanoid = character:FindFirstChildOfClass("Humanoid")

        if humanoid then
            humanoid.WalkSpeed = WalkSpeedValue
            print("Velocidad de caminata establecida en: " .. WalkSpeedValue)
        else
            warn("No se encontró el Humanoid en el Character.")
        end
    end
})

-- Botón para activar vuelo con la tecla "X"
AvatarTab:CreateButton({
    Name = "X to Fly",
    Callback = function()
        local flying = false
        local player = game.Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")

        if not humanoidRootPart then
            warn("No se encontró HumanoidRootPart")
            return
        end

        local UIS = game:GetService("UserInputService")

        UIS.InputBegan:Connect(function(input, processed)
            if processed then return end
            if input.KeyCode == Enum.KeyCode.X then
                flying = not flying
                if flying then
                    print("Vuelo activado")
                    while flying do
                        humanoidRootPart.Velocity = Vector3.new(0, 50, 0) -- Eleva al jugador
                        wait(0.1)
                    end
                else
                    print("Vuelo desactivado")
                end
            end
        end)
    end
})

-- Botón en la pestaña Teleports 📋 para teletransportar al jugador al modelo "Da Metaverse Portal"
TeleportsTab:CreateButton({
    Name = "Tp to Da Metaverse Portal",
    Callback = function()
        local modelName = "Da Metaverse Portal"
        local model = game.Workspace:FindFirstChild(modelName)
        if model and model:IsA("Model") then
            local portalPosition = model:GetPivot().Position + model:GetPivot().LookVector * 10 -- Mueve 10 pasos adelante
            local player = game.Players.LocalPlayer
            if player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                player.Character.HumanoidRootPart.CFrame = CFrame.new(portalPosition)
                print("Jugador teletransportado exitosamente al portal, 10 pasos adelante.")
            else
                print("No se encontró al jugador o su HumanoidRootPart.")
            end
        else
            print("Modelo no encontrado en el Workspace.")
        end
    end
})

-- Botón en la pestaña Teleports 📋 para teletransportar al jugador al objeto "Statue" en el Workspace
TeleportsTab:CreateButton({
    Name = "Tp to Statue",
    Callback = function()
        local statue = game.Workspace:FindFirstChild("Statue")
        if statue and statue:IsA("Model") then
            local statuePosition = statue:GetPivot().Position
            local player = game.Players.LocalPlayer
            if player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                player.Character.HumanoidRootPart.CFrame = CFrame.new(statuePosition)
                print("Jugador teletransportado exitosamente a la estatua.")
            else
                print("No se encontró al jugador o su HumanoidRootPart.")
            end
        else
            print("Estatua no encontrada en el Workspace.")
        end
    end
})
